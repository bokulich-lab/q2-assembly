name: Build Docker image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      latest-dev-tag: ${{ steps.fetch_latest_tags.outputs.latest-dev-tag }}
      latest-stable-tag: ${{ steps.fetch_latest_tags.outputs.latest-stable-tag }}
      commit-msg: ${{ steps.get-commit-msg.outputs.commit-msg }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest tag
        id: vars
        run: |
          REF=$(git describe --tags --abbrev=0)
          epoch=$(echo $REF | cut -d'.' -f1,2)
          if [[ $REF == *.dev* ]]; then env=passed; else env=released; fi
          echo "epoch=$epoch"    >> $GITHUB_OUTPUT
          echo "environment=$env" >> $GITHUB_OUTPUT

      - name: Output the latest tag
        run: echo "The latest tag is ${{ env.latest_tag }}"

      - name: Checkout utilities
        uses: actions/checkout@v4
        with:
          repository: bokulich-lab/utilities
          path: utilities

      - name: Get last commit
        id: get-commit-msg
        run: |
          # Get commit message and escape potential special characters
          commit_msg=$(git log --pretty=%B -n 1 --skip 1 2>/dev/null)
          # Use proper delimiter for multiline strings in GitHub Actions
          echo "commit-msg<<EOF" >> $GITHUB_OUTPUT
          echo "$commit_msg" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: python -m pip install requests yq pyyaml

      - name: Fetch latest tags
        id: fetch-tags
        run: |
          latest_tags=$(python ./utilities/ci/get-tags.py)
          echo "$latest_tags" > tags.txt
          echo "latest-dev-tag=$(grep 'latest-dev-tag' tags.txt | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
          echo "latest-stable-tag=$(grep 'latest-stable-tag' tags.txt | cut -d '=' -f 2)" >> $GITHUB_OUTPUT

      - name: Create conda yaml
        id: create-conda-yaml
        run: |
          python ./utilities/ci/get-dependencies.py \
            --distro moshpit \
            --version-tag ${{ steps.vars.outputs.epoch }} \
            --repositories-yaml ./utilities/ci/repositories.yaml
          cat environment.yml >> $GITHUB_STEP_SUMMARY

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the remote registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the test image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          load: true
          tags: ${{ github.sha }}
          target: test
          cache-from: type=registry,ref=quay.io/bokulichlab/q2-assembly:cache
          cache-to: type=registry,ref=quay.io/bokulichlab/q2-assembly:cache,mode=max
          build-args: |
            EPOCH=${{ steps.vars.outputs.epoch }}
            DISTRO=tiny
            ENVIRONMENT=${{ steps.vars.outputs.environment }}

      - name: Run tests in the container
        run: docker run --rm ${{ github.sha }}
