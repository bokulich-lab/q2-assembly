name: Build Docker image

on:
  push:
    branches: ["main"]
  pull_request_target:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

#      - name: Set output
#        id: vars
#        run: |
#          REF=${GITHUB_REF#refs/*/}
#          echo "epoch=$(echo $REF | cut -d'.' -f1,2)" >> $GITHUB_OUTPUT
#          echo "docker-tag=${{ secrets.DOCKER_REPO }}:$REF" >> $GITHUB_OUTPUT
#          if [[ $REF == *.dev* ]]; then
#            echo "environment=passed" >> $GITHUB_OUTPUT
#          else
#            echo "environment=released" >> $GITHUB_OUTPUT
#          fi
      

      - name: Get the latest tag
        id: vars
        run: |
          git fetch --tags
          REF=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "epoch=$(echo $REF | cut -d'.' -f1,2)" >> $GITHUB_OUTPUT

      - name: Output the latest tag
        run: echo "The latest tag is ${{ env.latest_tag }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the remote registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ github.sha }}
          build-args: |
            EPOCH=${{ steps.vars.outputs.epoch }}
            DISTRO=tiny
            ENVIRONMENT=passed
