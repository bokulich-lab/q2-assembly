@InProceedings{ mckinney-proc-scipy-2010,
  author    = { Wes McKinney },
  title     = { Data Structures for Statistical Computing in Python },
  booktitle = { Proceedings of the 9th Python in Science Conference },
  pages     = { 51 -- 56 },
  year      = { 2010 },
  editor    = { St{\'e}fan van der Walt and Jarrod Millman }
}

@article{Li2016,
  author = {Li, Dinghua and Luo, Ruibang and Liu, Chi Man and Leung, Chi Ming and Ting, Hing Fung and Sadakane, Kunihiko and Yamashita, Hiroshi and Lam, Tak Wah},
  booktitle = {Methods},
  doi = {10.1016/j.ymeth.2016.02.020},
  issn = {10959130},
  month = {jun},
  pages = {3--11},
  pmid = {27012178},
  publisher = {Academic Press Inc.},
  title = {{MEGAHIT v1.0: A fast and scalable metagenome assembler driven by advanced methodologies and community practices}},
  url = {https://pubmed.ncbi.nlm.nih.gov/27012178/},
  volume = {102},
  year = {2016}
}

@article{Li2015,
  author = {Li, Dinghua and Liu, Chi Man and Luo, Ruibang and Sadakane, Kunihiko and Lam, Tak Wah},
  doi = {10.1093/bioinformatics/btv033},
  issn = {14602059},
  journal = {Bioinformatics},
  month = {may},
  number = {10},
  pages = {1674--1676},
  pmid = {25609793},
  publisher = {Oxford University Press},
  title = {{MEGAHIT: An ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph}},
  url = {https://pubmed.ncbi.nlm.nih.gov/25609793/},
  volume = {31},
  year = {2015}
}

@article{Clark2021,
  author = {Clark, Ryan L. and Connors, Bryce M. and Stevenson, David M. and Hromada, Susan E. and Hamilton, Joshua J. and Amador-Noguez, Daniel and Venturelli, Ophelia S.},
  doi = {10.1038/s41467-021-22938-y},
  issn = {2041-1723},
  journal = {Nature Communications},
  month = {dec},
  number = {1},
  pages = {3254},
  publisher = {Nature Publishing Group},
  title = {{Design of synthetic human gut microbiome assembly and butyrate production}},
  url = {http://www.nature.com/articles/s41467-021-22938-y},
  volume = {12},
  year = {2021}
}

@article{Mikheenko2016,
  abstract = {Summary: During the past years we have witnessed the rapid development of new metagenome assembly methods. Although there are many benchmark utilities designed for single-genome assemblies, there is no well-recognized evaluation and comparison tool for metagenomic-specific analogues. In this article, we present MetaQUAST, a modification of QUAST, the state-of-the-art tool for genome assembly evaluation based on alignment of contigs to a reference. MetaQUAST addresses such metagenome datasets features as (i) unknown species content by detecting and downloading reference sequences, (ii) huge diversity by giving comprehensive reports for multiple genomes and (iii) presence of highly relative species by detecting chimeric contigs. We demonstrate MetaQUAST performance by comparing several leading assemblers on one simulated and two real datasets. Availability and implementation: http://bioinf.spbau.ru/metaquast.},
  author = {Mikheenko, Alla and Saveliev, Vladislav and Gurevich, Alexey},
  doi = {10.1093/bioinformatics/btv697},
  issn = {14602059},
  journal = {Bioinformatics},
  month = {apr},
  number = {7},
  pages = {1088--1090},
  pmid = {26614127},
  publisher = {Oxford University Press},
  title = {{MetaQUAST: Evaluation of metagenome assemblies}},
  url = {https://pubmed.ncbi.nlm.nih.gov/26614127/},
  volume = {32},
  year = {2016}
}

@inproceedings{Mikheenko2018,
  abstract = {Motivation: The emergence of high-throughput sequencing technologies revolutionized genomics in early 2000s. The next revolution came with the era of long-read sequencing. These technological advances along with novel computational approaches became the next step towards the automatic pipelines capable to assemble nearly complete mammalian-size genomes. Results: In this manuscript, we demonstrate performance of the state-of-the-art genome assembly software on six eukaryotic datasets sequenced using different technologies. To evaluate the results, we developed QUAST-LG?a tool that compares large genomic de novo assemblies against reference sequences and computes relevant quality metrics. Since genomes generally cannot be reconstructed completely due to complex repeat patterns and low coverage regions, we introduce a concept of upper bound assembly for a given genome and set of reads, and compute theoretical limits on assembly correctness and completeness. Using QUAST-LG, we show how close the assemblies are to the theoretical optimum, and how far this optimum is from the finished reference.},
  author = {Mikheenko, Alla and Prjibelski, Andrey and Saveliev, Vladislav and Antipov, Dmitry and Gurevich, Alexey},
  booktitle = {Bioinformatics},
  doi = {10.1093/bioinformatics/bty266},
  issn = {14602059},
  month = {jul},
  number = {13},
  pages = {i142--i150},
  pmid = {29949969},
  publisher = {Oxford University Press},
  title = {{Versatile genome assembly evaluation with QUAST-LG}},
  url = {http://cab.spbu.ru/software/quast-lg},
  volume = {34},
  year = {2018}
}

@article{Langmead2012,
  abstract = {As the rate of sequencing increases, greater throughput is demanded from read aligners. The full-text minute index is often used to make alignment very fast and memory-efficient, but the approach is ill-suited to finding longer, gapped alignments. Bowtie 2 combines the strengths of the full-text minute index with the flexibility and speed of hardware-accelerated dynamic programming algorithms to achieve a combination of high speed, sensitivity and accuracy. {\textcopyright} 2012 Nature America, Inc. All rights reserved.},
  author = {Langmead, Ben and Salzberg, Steven L.},
  doi = {10.1038/nmeth.1923},
  issn = {15487091},
  journal = {Nature Methods},
  keywords = {Bioinformatics,Genomics,Sequencing},
  month = {apr},
  number = {4},
  pages = {357--359},
  pmid = {22388286},
  publisher = {Nature Publishing Group},
  title = {{Fast gapped-read alignment with Bowtie 2}},
  url = {http://bowtie-bio.sourceforge.net/bowtie2/index.shtml.},
  volume = {9},
  year = {2012}
}

@article{Gourle2019,
  abstract = {Motivation The accurate in silico simulation of metagenomic datasets is of great importance for benchmarking bioinformatics tools as well as for experimental design. Users are dependant on large-scale simulation to not only design experiments and new projects but also for accurate estimation of computational needs within a project. Unfortunately, most current read simulators are either not suited for metagenomics, out of date or relatively poorly documented. In this article, we describe InSilicoSeq, a software package to simulate metagenomic Illumina sequencing data. InsilicoSeq has a simple command-line interface and extensive documentation. Results InSilicoSeq is implemented in Python and capable of simulating realistic Illumina (meta) genomic data in a parallel fashion with sensible default parameters. Availability and implementation Source code and documentation are available under the MIT license at https://github.com/HadrienG/InSilicoSeq and https://insilicoseq.readthedocs.io/. Supplementary informationSupplementary dataare available at Bioinformatics online.},
  author = {Gourl{\'{e}}, Hadrien and Karlsson-Lindsj{\"{o}}, Oskar and Hayer, Juliette and Bongcam-Rudloff, Erik},
  doi = {10.1093/bioinformatics/bty630},
  issn = {14602059},
  journal = {Bioinformatics},
  month = {feb},
  number = {3},
  pages = {521--522},
  pmid = {30016412},
  publisher = {Oxford University Press},
  title = {{Simulating Illumina metagenomic data with InSilicoSeq}},
  url = {https://github.com/HadrienG/InSilicoSeq},
  volume = {35},
  year = {2019}
}
